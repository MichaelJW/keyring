% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api.R
\name{key_get}
\alias{key_get}
\alias{key_set}
\alias{key_set_with_value}
\alias{key_delete}
\alias{key_list}
\title{Query, set, delete list keys in a keyring}
\usage{
key_get(service, username = NULL, backend = default_backend())

key_set(service, username = NULL, backend = default_backend())

key_set_with_value(service, username = NULL, password = NULL,
  backend = default_backend())

key_delete(service, username = NULL, backend = default_backend())

key_list(service = NULL, backend = default_backend())
}
\arguments{
\item{service}{Service name, a character scalar.}

\item{username}{Username, a character scalar, or \code{NULL} if the key
is not associated with a username.}

\item{backend}{Backend to use. See \link{backends}.}

\item{password}{The secret to store. For \code{key_set}, it is read from
the console, interactively. \code{key_set_with_value} can be also used
in non-interactive mode.}
}
\value{
\code{key_get} returns a character scalar, the password or other
confidential information that was stored in the key.

\code{key_list} returns a list of keys, i.e. service names and usernames,
in a data frame.
}
\description{
These functions manipulate keys in a keyring. You can think of a keyring
as a secure key-value store.
}
\details{
\code{key_get} queries a key from the keyring.

\code{key_set} sets a key in the keyring. The contents of the key is read
interactively from the terminal.

\code{key_set_with_value} is the non-interactive pair of \code{key_set}, to set
a key in the keyring.

\code{key_delete} deletes a key.

\code{key_list} lists all keys of a keyring, or the keys for a certain
service (if \code{service} is not \code{NULL}).
}
\examples{
# These examples use the default keyring, and they are interactive,
# so, we don't run them by default
\dontrun{
key_set("R-keyring-test-service", "donaldduck")
key_get("R-keyring-test-service", "donaldduck")
if (keyring_support()) key_list(service = "R-keyring-test-service")
key_delete("R-keyring-test-service", "donaldduck")
}

## This is non-interactive, assuming that that default keyring
## is unlocked
key_set_with_value("R-keyring-test-service", "donaldduck",
                   password = "secret")
key_get("R-keyring-test-service", "donaldduck")
if (keyring_support()) key_list(service = "R-keyring-test-service")
key_delete("R-keyring-test-service", "donaldduck")
}
